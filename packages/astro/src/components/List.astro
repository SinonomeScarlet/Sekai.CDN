---
import type { DirectoryEntry } from '@packages/common';
import Entry from './Entry.astro';

interface Props {
    parentDir: string | null;
    files: DirectoryEntry[];
}

const { parentDir, files } = Astro.props;
---

<ul id="list" class="list">
    {(parentDir != null) && <Entry name=".." href={parentDir} type="parent" />}
    {files.map((file) =>
        <Entry
            name={file.name}
            href={file.name}
            size={file.directory ? "ディレクトリ" : file.sizeStr}
            type={file.directory ? "directory" : "file"}
        />
    )}
</ul>

<style is:global>
    .list {
        padding: 0;
    }

    .grid-layout .list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    }
</style>

<script>
    document.addEventListener('astro:page-load', () => {
        // Header の DOM
        const listLayoutButton = document.getElementById('list-layout-button');
        const gridLayoutButton = document.getElementById('grid-layout-button');

        const list = document.getElementById('list');

        listLayoutButton.addEventListener('click', () => {
            console.log('clicked');
            document.body.classList.remove('grid-layout');
        });

        gridLayoutButton.addEventListener('click', () => {
            console.log('clicked');
            document.body.classList.add('grid-layout');
        });
    })
</script>
