---
type EntryType = 'file' | 'directory' | 'parent';

interface Props {
    name: string;
    href: string;
    size?: string;
    type: EntryType;
}

const { name, href, size, type } = Astro.props;

function getIconSrc() {
    switch (type) {
        default:
        case 'file':
            return '/static/file.svg';
        case 'directory':
            return '/static/directory.svg';
        case 'parent':
            return '/static/parent.svg';
    }
}

const searchParams = Astro.url.search;
const fullHref = (searchParams && type != 'file') ? href + searchParams : href;
---

<li class="item">
    <a href={fullHref} class="link">
        <div class="box">
            <div class="icon-box">
                <img class="icon" src={getIconSrc()} alt="ファイル">
            </div>
            <div class="data-box">
                <div class="column-box name-box">
                    <span class="name">{name}</span>
                </div>
                <div class="column-box size-box">
                    {(size != null) && <span>{size}</span>}
                </div>
            </div>
        </div>
    </a>
</li>

<style>
    .item {
        list-style: none;
        margin: 0.25em;
    }

    .link {
        color: black;
        text-decoration: none;
    }

    .icon {
        height: 1.25em;
        width: auto;
        vertical-align: middle;
    }

    .name {
        font-family: Consolas, monospace;
    }

    .box {
        --horizontal-padding: 1em;
        display: flex;
        width: calc(100% - 2 * var(--horizontal-padding));
        height: 100%;
        background-color: #c0c0c040;
        padding: 0 var(--horizontal-padding) 0;
        border-radius: 1em;
    }

    .box:hover {
        background-color: #c0c0c0;
    }

    .item:nth-child(2n) .box {
        background-color: #80808040;
    }

    .item:nth-child(2n) .box:hover {
        background-color: #808080;
    }

    .icon-box {
        width: 1.5em;
    }

    .data-box {
        display: flex;
        width: 100%;
    }

    .column-box {
        padding: 0 1em 0;
    }

    .name-box {
        flex: 2;
    }

    .name {
        overflow-wrap: break-word;
    }

    .size-box {
        flex: 1;
        font-family: serif;
    }
</style>

<style is:global>
    .grid-layout .box {
        flex-direction: column;
    }

    .grid-layout .data-box {
        flex-direction: column;
        width: auto;
    }
</style>
